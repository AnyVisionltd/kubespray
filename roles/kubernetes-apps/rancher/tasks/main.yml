---
- name: Rancher | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/rancher"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['kube-master'][0]

- name: Rancher | Copy chart to addon dir
  synchronize:
    src: chart/
    dest: "{{ kube_config_dir }}/addons/rancher/"
  when: inventory_hostname == groups['kube-master'][0]

- name: Rancher | Install helm chart
  shell: "helm upgrade --install rancher {{ kube_config_dir }}/addons/rancher --namespace cattle-system --set hostname='rancher.anv' --wait --timeout 90"
  ignore_errors: yes
  when: inventory_hostname == groups['kube-master'][0]

- name: Argo | Install Argo
  shell: |
    helm repo add argo https://argoproj.github.io/argo-helm
    helm upgrade --install argo argo/argo --namespace=kube-system \
    --set ui.ingress.enabled=true,ui.ingress.hosts[0]=argo.anv,ui.ingress.annotation."kubernetes\.io/ingress\.class"=nginx,images.pullPolicy=IfNotPresent,images.tag=v2.3.0
  ignore_errors: yes
  when: inventory_hostname == groups['kube-master'][0]


- name: Rancher | Copy jq to /usr/local/bin
  synchronize:
    src: jq
    dest: /usr/local/bin/
  when: inventory_hostname == groups['kube-master'][0]

- name: Rancher | Copy rancher CLI to /usr/local/bin
  synchronize:
    src: rancher
    dest: /usr/local/bin/
  when: inventory_hostname == groups['kube-master'][0]

- name: Add Rancher domain to hosts file
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 rancher.anv argo.anv"
    state: present
  when: inventory_hostname == groups['kube-master'][0]


- name: Cert-manager | Install Cert manager
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.7/deploy/manifests/00-crds.yaml
    kubectl create namespace cert-manager
    kubectl label namespace cert-manager certmanager.k8s.io/disable-validation=true
    helm upgrade --install cert-manager stable/cert-manager --namespace cert-manager --version v0.6.7
  ignore_errors: yes
  when: inventory_hostname == groups['kube-master'][0]

#
#- name: Rancher | Interact with Rancher API
#  shell: |
#    RANCHER_SERVER_BASE=https://rancher.anv
#
#    # Wait until server is alive
#    while ! curl -k ${RANCHER_SERVER_BASE}/ping; do sleep 3; done
#
#    # Login with default admin credentials get a temporary token with 60s TTL
#    LOGINRESPONSE=`curl -s "${RANCHER_SERVER_BASE}/v3-public/localProviders/local?action=login" -H "content-type: application/json" --data-binary '{"username":"admin","password":"admin","ttl":60000}' --insecure`
#    LOGINTOKEN=`echo $LOGINRESPONSE | jq -r .token`
#
#    # Change admin password
#    #curl -s "${RANCHER_SERVER_BASE}/v3/users?action=changepassword" -H "content-type: application/json" -H "Authorization: Bearer $LOGINTOKEN" --data-binary '{"currentPassword":"admin","newPassword":"thisisyournewpassword"}' --insecure
#
#    # Create and get admin API key
#    APIRESPONSE=`curl -s "${RANCHER_SERVER_BASE}/v3/token" -H "content-type: application/json" -H "Authorization: Bearer $LOGINTOKEN" --data-binary '{"type":"token","description":"automation"}' --insecure`
#    APITOKEN=`echo $APIRESPONSE | jq -r .token`
#
#    # Set `server-url` configuration option
#    curl -s 'https://127.0.0.1/v3/settings/server-url' -H 'content-type: application/json' -H "Authorization: Bearer $APITOKEN" -X PUT --data-binary '{"name":"server-url","value":"'$RANCHER_SERVER_BASE'"}' --insecure > /dev/null
#    while ! rancher login $RANCHER_SERVER_BASE --token $APITOKEN --skip-verify > /dev/null 2>&1; do sleep 3; done
#    rancher catalog add anyvision http://get.a-v.io > /dev/null
#    rancher catalog delete library > /dev/null
#    kubectl create secret generic rancher-cli-token --from-file=/root/.rancher/cli2.json --dry-run -o yaml | kubectl apply -f -
#  ignore_errors: yes
#  when: inventory_hostname == groups['kube-master'][0]

